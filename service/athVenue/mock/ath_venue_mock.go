// Automatically generated by MockGen. DO NOT EDIT!
// Source: backend/service/athVenue (interfaces: AthVenueService)

package mock

import (
	io "backend/pkg/io"
	context "context"
	gomock "github.com/golang/mock/gomock"
)

// Mock of AthVenueService interface
type MockAthVenueService struct {
	ctrl     *gomock.Controller
	recorder *_MockAthVenueServiceRecorder
}

// Recorder for MockAthVenueService (not exported)
type _MockAthVenueServiceRecorder struct {
	mock *MockAthVenueService
}

func NewMockAthVenueService(ctrl *gomock.Controller) *MockAthVenueService {
	mock := &MockAthVenueService{ctrl: ctrl}
	mock.recorder = &_MockAthVenueServiceRecorder{mock}
	return mock
}

func (_m *MockAthVenueService) EXPECT() *_MockAthVenueServiceRecorder {
	return _m.recorder
}

func (_m *MockAthVenueService) CreateVenue(_param0 context.Context, _param1 io.AthVenues) io.Response {
	ret := _m.ctrl.Call(_m, "CreateVenue", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthVenueServiceRecorder) CreateVenue(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateVenue", arg0, arg1)
}

func (_m *MockAthVenueService) CreateVenueHoliday(_param0 context.Context, _param1 io.AthVenueHolidays) io.Response {
	ret := _m.ctrl.Call(_m, "CreateVenueHoliday", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthVenueServiceRecorder) CreateVenueHoliday(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateVenueHoliday", arg0, arg1)
}

func (_m *MockAthVenueService) DeleteHoursOfOperation(_param0 context.Context, _param1 io.AthVenueHours) io.Response {
	ret := _m.ctrl.Call(_m, "DeleteHoursOfOperation", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthVenueServiceRecorder) DeleteHoursOfOperation(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteHoursOfOperation", arg0, arg1)
}

func (_m *MockAthVenueService) DeleteVenueHoliday(_param0 context.Context, _param1 io.DeleteVenueHolidays) io.Response {
	ret := _m.ctrl.Call(_m, "DeleteVenueHoliday", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthVenueServiceRecorder) DeleteVenueHoliday(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteVenueHoliday", arg0, arg1)
}

func (_m *MockAthVenueService) EditHoursOfOperation(_param0 context.Context, _param1 io.AthVenueHours) io.Response {
	ret := _m.ctrl.Call(_m, "EditHoursOfOperation", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthVenueServiceRecorder) EditHoursOfOperation(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EditHoursOfOperation", arg0, arg1)
}

func (_m *MockAthVenueService) EditVenue(_param0 context.Context, _param1 io.AthVenues) io.Response {
	ret := _m.ctrl.Call(_m, "EditVenue", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthVenueServiceRecorder) EditVenue(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EditVenue", arg0, arg1)
}

func (_m *MockAthVenueService) SaveHoursOfOperation(_param0 context.Context, _param1 io.AthVenueHours) io.Response {
	ret := _m.ctrl.Call(_m, "SaveHoursOfOperation", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthVenueServiceRecorder) SaveHoursOfOperation(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SaveHoursOfOperation", arg0, arg1)
}
