// Automatically generated by MockGen. DO NOT EDIT!
// Source: backend/service/athUser (interfaces: AthUserService)

package mock

import (
	io "backend/pkg/io"
	context "context"
	gomock "github.com/golang/mock/gomock"
)

// Mock of AthUserService interface
type MockAthUserService struct {
	ctrl     *gomock.Controller
	recorder *_MockAthUserServiceRecorder
}

// Recorder for MockAthUserService (not exported)
type _MockAthUserServiceRecorder struct {
	mock *MockAthUserService
}

func NewMockAthUserService(ctrl *gomock.Controller) *MockAthUserService {
	mock := &MockAthUserService{ctrl: ctrl}
	mock.recorder = &_MockAthUserServiceRecorder{mock}
	return mock
}

func (_m *MockAthUserService) EXPECT() *_MockAthUserServiceRecorder {
	return _m.recorder
}

func (_m *MockAthUserService) CreateUserProfile(_param0 context.Context, _param1 io.AthUserProfile) io.Response {
	ret := _m.ctrl.Call(_m, "CreateUserProfile", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) CreateUserProfile(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateUserProfile", arg0, arg1)
}

func (_m *MockAthUserService) EditUser(_param0 context.Context, _param1 io.AthUser) io.Response {
	ret := _m.ctrl.Call(_m, "EditUser", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) EditUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EditUser", arg0, arg1)
}

func (_m *MockAthUserService) EditUserProfile(_param0 context.Context, _param1 io.AthUserProfile) io.Response {
	ret := _m.ctrl.Call(_m, "EditUserProfile", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) EditUserProfile(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EditUserProfile", arg0, arg1)
}

func (_m *MockAthUserService) EmailVerify(_param0 context.Context, _param1 io.EmailVerify) io.Response {
	ret := _m.ctrl.Call(_m, "EmailVerify", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) EmailVerify(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EmailVerify", arg0, arg1)
}

func (_m *MockAthUserService) ForgotPasswordUser(_param0 context.Context, _param1 io.ForgotPasswordRequest) io.Response {
	ret := _m.ctrl.Call(_m, "ForgotPasswordUser", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) ForgotPasswordUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ForgotPasswordUser", arg0, arg1)
}

func (_m *MockAthUserService) LoginUser(_param0 context.Context, _param1 io.LoginRequest) io.Response {
	ret := _m.ctrl.Call(_m, "LoginUser", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) LoginUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "LoginUser", arg0, arg1)
}

func (_m *MockAthUserService) PhoneVerifyUser(_param0 context.Context, _param1 io.Verify) io.Response {
	ret := _m.ctrl.Call(_m, "PhoneVerifyUser", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) PhoneVerifyUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PhoneVerifyUser", arg0, arg1)
}

func (_m *MockAthUserService) ResendCode(_param0 context.Context, _param1 io.Verify) io.Response {
	ret := _m.ctrl.Call(_m, "ResendCode", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) ResendCode(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ResendCode", arg0, arg1)
}

func (_m *MockAthUserService) ResetPasswordUser(_param0 context.Context, _param1 io.ResetPasswordRequest) io.Response {
	ret := _m.ctrl.Call(_m, "ResetPasswordUser", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) ResetPasswordUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ResetPasswordUser", arg0, arg1)
}

func (_m *MockAthUserService) SignUpUser(_param0 context.Context, _param1 io.AthUser) io.Response {
	ret := _m.ctrl.Call(_m, "SignUpUser", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) SignUpUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SignUpUser", arg0, arg1)
}
