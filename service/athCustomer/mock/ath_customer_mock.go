// Automatically generated by MockGen. DO NOT EDIT!
// Source: backend/service/athCustomer (interfaces: AthCustomerService)

package mock

import (
	io "backend/pkg/io"
	context "context"
	gomock "github.com/golang/mock/gomock"
)

// Mock of AthCustomerService interface
type MockAthCustomerService struct {
	ctrl     *gomock.Controller
	recorder *_MockAthCustomerServiceRecorder
}

// Recorder for MockAthCustomerService (not exported)
type _MockAthCustomerServiceRecorder struct {
	mock *MockAthCustomerService
}

func NewMockAthCustomerService(ctrl *gomock.Controller) *MockAthCustomerService {
	mock := &MockAthCustomerService{ctrl: ctrl}
	mock.recorder = &_MockAthCustomerServiceRecorder{mock}
	return mock
}

func (_m *MockAthCustomerService) EXPECT() *_MockAthCustomerServiceRecorder {
	return _m.recorder
}

func (_m *MockAthCustomerService) CreateCustomer(_param0 context.Context, _param1 io.AthUser) io.Response {
	ret := _m.ctrl.Call(_m, "CreateCustomer", _param0, _param1)
	ret0, _ := ret[0].(io.Response)
	return ret0
}

func (_mr *_MockAthCustomerServiceRecorder) CreateCustomer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateCustomer", arg0, arg1)
}
